Day-4

problem -1
question : Grid unique paths
link:https://leetcode.com/problems/unique-paths/v

solution-java:
class Solution {
    public int uniquePaths(int n, int m) { 
    //     int[][] dp = new int[n][m];
    //     for(int i=0;i<n;i++){
    //         for(int j=0;j<m;j++){
    //             dp[i][j]=-1;
    //         }
    //     }
    //     return dfs(0,0,n,m,dp);
        
    // }

    // public int dfs(int i , int j, int n, int m ,int[][] dp){
    //     if(i==n-1 && j==m-1){
    //         return 1;
    //     }

    //     if(i>n-1 || j>m-1){
    //         return 0;
    //     }

    //     if(dp[i][j]!=-1){
    //         return dp[i][j];
    //     }

    //     else{
    //         return dp[i][j] = dfs(i+1,j,n,m,dp)+dfs(i,j+1,n,m,dp);
    //     }
     
     
     // this is using the combinations 
     int right = n-1;
     int down = m-1;
     int total = right+down;
     int count=1;
     double ans = 1;
     while(count<=right){
         ans = ans* (total+count-right)/(count);
         count++;
     }
     return (int)ans;
     
    }
}
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
