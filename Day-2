Day-2

problem -1

question: Best time to but and sell stock
link :https://leetcode.com/problems/best-time-to-buy-and-sell-stock/

solution - java:
class Solution {
    public int maxProfit(int[] prices) {
        int max_profit=0;
        int min=prices[0];
        if(prices.length==1){
            return 0;
        }
        else{
            for(int i=1;i<prices.length;i++){
                int dif = prices[i]-min;
                if(dif>max_profit){
                    max_profit=dif;
                }
                if(prices[i]<min){
                    min=prices[i];
                }
            }
        }
        return max_profit;
    }
}

---------------------------------------------------------------------------------------------------------------------------------------------------------------------

problem -2

question: rotate a matrix
link : https://leetcode.com/problems/rotate-image/description/

solution - java:

class Solution {
    public void rotate(int[][] matrix) {
        int n= matrix.length;
        // int[][] ans = new int[n][n];
        // for(int i=0;i<n;i++){
        //     for(int j=0;j<n;j++){
        //         ans[j][n-1-i] = matrix[i][j];
        //     }
        // }
        // for(int i=0;i<n;i++){
        //     for(int j=0;j<n;j++){
        //         matrix[i][j] = ans[i][j];
        //     }
        // }

        // transpose of matrix
        for(int i=0;i<n;i++){
            for(int j=i;j<n;j++){
                int temp = matrix[i][j];
                matrix[i][j] = matrix[j][i];
                matrix[j][i] = temp;
            }
        }

        // reverse elements in a row;
        for(int i=0;i<n;i++){
            for(int j=0;j<n/2;j++){
                int temp = matrix[i][j];
                matrix[i][j] = matrix[i][n-1-j];
                matrix[i][n-1-j] = temp;
            }
        }
    }
}
------------------------------------------------------------------------------------------------------------------------------------------------------------------

problem -3

question:  missing no and repeated number
link:https://www.codingninjas.com/codestudio/problems/873366?topList=striver-sde-sheet-problems&utm_source=striver&utm_medium=website
 solution -java:
 
import java.util.* ;
import java.io.*; 
import java.util.ArrayList;

public class Solution {

    public static int[] missingAndRepeating(ArrayList<Integer> arr, int n) {
        // Write your code here
        int sum=0;
        int arrsum=0;
        Collections.sort(arr);
        int prev=0;
        int val=0;
        for(int i=0;i<arr.size();i++){
            if(prev==arr.get(i)){
                val=prev;
            }
            else{
                prev=arr.get(i);
            }
            arrsum += arr.get(i);
            sum += i;
        }
        sum = sum+arr.size();
        arrsum= arrsum-val;
        int m = Math.abs(sum-arrsum);
        n =val;
        int[] arr1 =new int[2];
        arr1[0]=m;
        arr1[1]=n;
        return arr1;
    }
}

--------------------------------------------------------------------------------------------------------------------------------------------------------------------
problem -4 

question : find the duplicates
link:https://leetcode.com/problems/find-the-duplicate-number/description/

solution :

class Solution {
    public int findDuplicate(int[] nums) {
        Arrays.sort(nums);
        int val=nums[0];
        for(int i=0;i<nums.length-1;i++){
            if(nums[i]==nums[i+1]){
                val=nums[i];
                break;
            }
        }
        return val;


    }
}

------------------------------------------------------------------------------------------------------------------------------------------------------------------

problem -5
question: merge two sorted arrays
link:https://leetcode.com/problems/merge-sorted-array/

solution_java:
class Solution {
    public void merge(int[] nums1, int m, int[] nums2, int n) {
      int j=0;
      for(int i=m;i<nums1.length;i++){
          nums1[i]=nums2[j];
          j++;
      }
      Arrays.sort(nums1);
    }
}
------------------------------------------------------------------------------------------------------------------------------------------------------------------

